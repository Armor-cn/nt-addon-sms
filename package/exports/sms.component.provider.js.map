{"version":3,"sources":["../src/exports/sms.component.provider.ts"],"names":[],"mappings":";;;;;;;;;;AACA,yDAAqD;AAErD;IACI,YAA6B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAQlD,sBAAsB,CAAC,IAAW,EAAE,UAAsB;;YAC5D,OAAO,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;KAAA;IAQK,YAAY,CAAC,UAAkB,EAAE,cAAsB;;YACzD,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACjE,CAAC;KAAA;CACJ;AAtBD,oCAsBC;AAEY,QAAA,iBAAiB,GAAG,mBAAmB,CAAC;AACxC,QAAA,oBAAoB,GAAG;IAChC,OAAO,EAAE,yBAAiB;IAC1B,UAAU,EAAE,CAAC,UAAsB,EAAE,EAAE;QACnC,OAAO,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IACD,MAAM,EAAE,CAAC,wBAAU,CAAC;CACvB,CAAC","file":"sms.component.provider.js","sourcesContent":["import { SmsRequest } from \"../interfaces/sms-request.interface\";\nimport { SmsService } from \"../services/sms.service\";\n\nexport class SmsComponent {\n    constructor(private readonly smsService: SmsService) { }\n\n    /**\n     * 通过腾讯云发送短信\n     *\n     * @param type 短信类型 0为通知类短信(模板无参数)，1为验证码类短信(模板有参数)\n     * @param smsRequest 发送短信请求体 example: { \"appId\": \"1234567890\", \"templateId\": 123456, \"mobile\": [\"13512345678\"] }\n     */\n    async sendSmsMessageByQCloud(type: 0 | 1, smsRequest: SmsRequest): Promise<{}> {\n        return this.smsService.sendMessageByQCloud(type, smsRequest);\n    }\n\n    /**\n     * 校验验证码合法性\n     *\n     * @param templateId 发送短信的模板ID\n     * @param validationCode 验证码\n     */\n    async smsValidator(templateId: number, validationCode: number): Promise<boolean> {\n        return this.smsService.validator(templateId, validationCode);\n    }\n}\n\nexport const SmsComponentToken = \"SmsComponentToken\";\nexport const SmsComponentProvider = {\n    provide: SmsComponentToken,\n    useFactory: (smsService: SmsService) => {\n        return new SmsComponent(smsService);\n    },\n    inject: [SmsService]\n};\n"]}