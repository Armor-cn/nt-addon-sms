{"version":3,"sources":["../src/resolvers/sms.resolver.ts"],"names":[],"mappings":"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","file":"sms.resolver.js","sourcesContent":["import { Inject } from \"@nestjs/common\";\nimport { Mutation, Query, Resolver } from \"@nestjs/graphql\";\n\nimport { Result } from \"../interfaces/result.interface\";\nimport { SmsInfo } from \"../interfaces/sms-info.interface\";\nimport { SmsLogInfo } from \"../interfaces/sms-log-info.interface\";\nimport { SmsResponse } from \"../interfaces/sms-response.interface\";\nimport { SmsService } from \"../services/sms.service\";\n\n@Resolver()\nexport class SmsResolver {\n    constructor(@Inject(SmsService) private readonly smsService: SmsService) {\n    }\n\n    @Query(\"smsInfos\")\n    async findAllSms(obj, args, context, info): Promise<SmsInfo> {\n        const sms = await this.smsService.findAllSms();\n        return { code: 200, message: \"获取所有短信插件信息成功\", data: sms };\n    }\n\n    @Query(\"smsInfo\")\n    async findOneSms(obj, args, context, info): Promise<SmsInfo> {\n        const sms = await this.smsService.findOneSms(args.appId);\n        return { code: 200, message: \"获取短信插件信息成功\", data: [sms] };\n    }\n\n    @Query(\"smsLogs\")\n    async findAllSmsLog(obj, args, context, info): Promise<SmsLogInfo> {\n        const smsLog = await this.smsService.findAllSmsLog();\n        return { code: 200, message: \"获取所有短信发送记录成功\", data: smsLog };\n    }\n\n    @Query(\"smsLog\")\n    async findOneSmsLog(obj, args, context, info): Promise<SmsLogInfo> {\n        const smsLog = await this.smsService.findOneSmsLog(args.templateId);\n        return { code: 200, message: \"获取短信发送记录成功\", data: smsLog };\n    }\n\n    @Query(\"sendMessage\")\n    async sendMessage(obj, args, context, info): Promise<SmsResponse> {\n        return this.smsService.sendMessageByQCloud(args.smsRequest);\n    }\n\n    @Mutation(\"createSms\")\n    async createSms(obj, args, context, info): Promise<Result> {\n        await this.smsService.createSms(args.sms);\n        return { code: 200, message: \"创建短信插件成功\" };\n    }\n\n    @Mutation(\"addTemplateToSms\")\n    async addTemplateToSms(obj, args, context, info): Promise<Result> {\n        await this.smsService.addTemplateToSms(args.appId, args.smsTemplate);\n        return { code: 200, message: \"增加模板成功\" };\n    }\n\n    @Mutation(\"deleteSms\")\n    async deleteSms(obj, args, context, info): Promise<Result> {\n        await this.smsService.deleteSms(args.appId);\n        return { code: 200, message: \"删除短信插件成功\" };\n    }\n\n    @Mutation(\"deleteSmsTemplate\")\n    async deleteSmsTemplate(obj, args, context, info): Promise<Result> {\n        await this.smsService.deleteSmsTemplate(args.templateId);\n        return { code: 200, message: \"删除模板成功\" };\n    }\n\n    @Mutation(\"updateSms\")\n    async updateSms(obj, args, context, info): Promise<Result> {\n        await this.smsService.updateSms(args.appId, args.signName, args.validationTime);\n        return { code: 200, message: \"更新短信插件成功\" };\n    }\n\n    @Mutation(\"updateSmsTemplate\")\n    async updateSmsTemplate(obj, args, context, info): Promise<Result> {\n        await this.smsService.updateSmsTemplate(args.templateId, args.name, args.remark);\n        return { code: 200, message: \"更新短信模板成功\" };\n    }\n}\n"]}